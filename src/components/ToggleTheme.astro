---
import { state } from '@/scripts/translate';
import Button from './Button.astro';
import { Icon } from 'astro-icon';

const { t } = state;
---

<toggle-theme {...t.nav.theme}>
  <Button type="button" data-transition="true">
    <Icon name="tabler:moon-stars" width={20} />
    <Icon name="tabler:sun" width={20} />
  </Button>
</toggle-theme>

<script>
  import { define, disableTransition } from '../scripts/utils';
  import { parseTheme } from '../scripts/types';

  let theme = parseTheme(document.documentElement.dataset.theme);

  @define('toggle-theme')
  class ToggleTheme extends HTMLElement {
    button = this.children[0];

    connectedCallback() {
      this.button.addEventListener('click', this.toggleTheme.bind(this));
      this.button.setAttribute('title', this.getAttribute(theme) ?? '');
    }

    toggleTheme() {
      theme = theme === 'dark' ? 'light' : 'dark';
      disableTransition((d) => (d.dataset.theme = theme));
      this.button.setAttribute('title', this.getAttribute(theme) ?? '');
      window.localStorage.setItem('theme', theme);
    }
  }
</script>

<style is:global>
  toggle-theme svg {
    transition: transform 100ms var(--easing);
    @nest [data-theme='dark'] & {
      transform: translateY(-1.75rem);
    }
  }

  toggle-theme button {
    display: var(--no-script, grid);
    gap: 1.75rem;
    align-items: flex-start;
    aspect-ratio: 1;
    padding: 0.5rem;
    @nest [data-transition='false'] & {
      transition: none;
    }
  }
</style>
