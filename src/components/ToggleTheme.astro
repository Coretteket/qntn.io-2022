---
import { state } from '../scripts/translate';
import Icon from './Icon.astro';

const t = state.translations;
---

<script>
  import type { Theme } from '../scripts/types';
  import { disableTransition, parseTheme } from '../scripts/utils';

  class ToggleTheme extends HTMLElement {
    connectedCallback() {
      this.addEventListener('click', this.toggleTheme.bind(this));
      this.firstElementChild?.setAttribute('data-transition', 'true');
    }

    get theme() {
      return parseTheme(document.documentElement.dataset.theme, 'light');
    }

    set theme(theme: Theme) {
      window.localStorage.setItem('theme', theme);
      disableTransition(() => (document.documentElement.dataset.theme = theme));
    }

    toggleTheme() {
      this.theme = this.theme === 'dark' ? 'light' : 'dark';
    }
  }

  customElements.define('toggle-theme', ToggleTheme);
</script>

<toggle-theme aria-label={t.nav.themeLabel}>
  <span data-transition="false">
    <Icon name="tabler:moon" title={t.nav.toggleTheme(t.nav.darkTheme)} />
    <Icon name="tabler:sun" title={t.nav.toggleTheme(t.nav.lightTheme)} />
  </span>
</toggle-theme>

<style lang="scss" is:global>
  toggle-theme svg {
    transition: transform 150ms var(--easing);
    [data-theme='dark'] & {
      transform: translateY(-1.75rem);
    }
  }

  toggle-theme span {
    display: grid;
    gap: 0.5rem;
    align-self: flex-start;
  }
</style>
