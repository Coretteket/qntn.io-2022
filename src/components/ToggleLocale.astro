---
import { state } from '../scripts/translate';
import Button from './Button.astro';
import { Icon } from 'astro-icon';

const { t } = state;

const path = Astro.url.pathname.replace(`/${state.locale}`, '');
const href = `${state.locale === 'en' ? '/nl' : '/en'}${path}`;
---

<toggle-locale>
  <Button href={href} title={t.nav.locale.toggle}>
    <Icon name="tabler:message" height={20} aria-label="Language" />
    <span>{t.nav.locale.other}</span>
  </Button>
</toggle-locale>

<script>
  import { define, isLocalized } from '../scripts/utils';
  import { parseLocale } from '../scripts/types';

  @define('toggle-locale')
  class ToggleLocale extends HTMLElement {
    get button() {
      return this.children[0];
    }

    connectedCallback() {
      if (isLocalized(new URL(location.href))) return; // only hydrate on non-localized pages
      this.button.outerHTML = this.button.outerHTML.replace(/(<\/?)a/g, '$1button');
      this.button.addEventListener('click', this.toggleLocale.bind(this));
      this.button.setAttribute('type', 'button');
      this.button.removeAttribute('href');
    }

    toggleLocale() {
      const locale = parseLocale(document.documentElement.lang) === 'en' ? 'nl' : 'en';
      document.cookie = `locale=${locale};path=/;SameSite=Lax`;
      location.reload();
    }
  }
</script>

<style is:global>
  toggle-locale :is(a, button) {
    padding-inline: 1rem;
  }

  toggle-locale [astro-icon] {
    margin-right: 0.125rem;
  }
</style>
