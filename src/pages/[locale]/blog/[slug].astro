---
import { getStaticPaths as getTranslationPaths } from '@/scripts/translate';
import { loadTranslations } from '@/scripts/translate';
import Layout from '@/layouts/ContentLayout.astro';
import Show from '@/components/Show.astro';
import { getBlogSlug } from '@/scripts/utils';
import Icon from 'astro-icon';

export const getStaticPaths = async () => {
  const posts = await Astro.glob('../../../content/*.mdx');
  return getTranslationPaths()
    .map(({ params: { locale } }) => posts.map((post) => ({ params: { locale, slug: getBlogSlug(post) }, props: { post } })))
    .flat();
};

type Paths = Awaited<ReturnType<typeof getStaticPaths>>[number];
// const { slug } = Astro.params as Paths['params'];
const { post } = Astro.props as Paths['props'];
const { frontmatter: matter } = post;

const { t, locale } = await loadTranslations(Astro);

const date = new Date(matter.date).toLocaleDateString(locale, { dateStyle: 'medium' });
const time = Math.round(matter.raw.length / 1200);
---

<Layout title={matter.title} subtitle={date}>
  <Show when={matter.locale !== locale} slot="banner">
    <div class="flex justify-start gap-4 px-4 py-3 rounded-lg bg-sky-300 text-sky-900 dark:bg-sky-900 !bg-opacity-40 dark:text-sky-200 leading-[1.3]">
      <Icon name="tabler:alert-circle" width={22} />
      <p>{t.blog.untranslated}</p>
    </div>
  </Show>
  <div slot="subtitle" class="flex gap-6 text-lg text-gray-700 dark:text-gray-200">
    <span class="flex gap-2"><Icon name="tabler:calendar" width={20} /> {date}</span>
    <span class="flex gap-2"><Icon name="tabler:file-text" width={20} /> {time} min.</span>
  </div>
  <post.Content />
</Layout>
